<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="sonata.payment.pool" class="Sonata\Component\Payment\Pool">

        </service>

        <service id="sonata.payment.method.paypal" class="Sonata\Component\Payment\Paypal">
            <tag name="sonata.payment.method" />

            <argument type="service" id="router" />
            <argument type="service" id="translator" on-invalid="null"/>
        </service>

        <service id="sonata.payment.method.check" class="Sonata\Component\Payment\CheckPayment">
            <tag name="sonata.payment.method" />

            <argument type="service" id="router" />
            <argument type="service" id="logger" />
            <argument />
        </service>

        <service id="sonata.payment.method.pass" class="Sonata\Component\Payment\PassPayment">
            <tag name="sonata.payment.method" />

            <argument type="service" id="router" />
            <argument />
        </service>

        <service id="sonata.payment.method.scellius" class="Sonata\Component\Payment\Scellius\ScelliusPayment">
            <tag name="sonata.payment.method" />

            <argument type="service" id="router" />
            <argument type="service" id="logger" />
            <argument type="service" id="templating" />
            <argument />
            <argument>%kernel.debug%</argument>
        </service>

        <service id="sonata.payment.provider.scellius.none_generator" class="Sonata\Component\Payment\Scellius\NodeScelliusTransactionGenerator" />
        <service id="sonata.payment.provider.scellius.order_generator" class="Sonata\Component\Payment\Scellius\OrderScelliusTransactionGenerator" />

        <service id="sonata.payment.method.ogone" class="Sonata\Component\Payment\Ogone\OgonePayment">
            <tag name="sonata.payment.method" />

            <argument type="service" id="router" />
            <argument type="service" id="logger" />
            <argument type="service" id="templating" />
            <argument>%kernel.debug%</argument>
        </service>

    </services>

</container>
